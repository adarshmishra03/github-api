{"version":3,"sources":["Components/Profile.js","Components/Search.js","Github.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Profile","userdata","this","props","userData","followers","homeURL","following","repos","notFound","className","href","target","title","name","username","src","avatar","Component","Search","event","preventDefault","value","ref","searchProfile","refs","onSubmit","submit","bind","type","placeholder","Github","state","finalURL","fetch","then","res","json","data","setState","login","avatar_url","public_repos","html_url","message","catch","error","console","log","getProfile","id","Header","onLogin","onLogout","page","idToken","Navbar","Brand","onClick","Nav","App","profile","lock","Auth0Lock","clientID","domain","on","authResult","setProfile","localStorage","setItem","JSON","stringify","getItem","parse","show","removeItem","logout","showLock","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9640c159.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Profile extends Component {\r\n  render(){\r\n    let userdata = this.props.userData;\r\n    let followers = `${userdata.homeURL}/followers`;\r\n    let following = `${userdata.homeURL}/following`;\r\n    let repos = `${userdata.homeURL}/repos`;\r\n\r\n    if(userdata.notFound === 'Not Found'){\r\n        return (\r\n            <div className=\"notFound\">\r\n                <h2>heyyyy</h2>\r\n                <p>Are you sure , for whom you are looking for ???</p>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <section className=\"github-profile\">\r\n                <div className=\"github-profile-info\">\r\n                    <a href={userdata.homeURL} target=\"_blank\" title={userdata.name || userdata.username}><img src={userdata.avatar} /></a>\r\n                    <h2><a href={userdata.homeURL} title={userdata.username} target=\"_blank\">{userdata.name || userdata.username}</a></h2>\r\n                </div>\r\n                <div className=\"github-profile-state\">\r\n                    <ul>\r\n                        <li>\r\n                            <a href={followers} target=\"_blank\" title=\"Number Of Followers\"><i>{userdata.followers}</i><span>Followers</span></a>\r\n                        </li>\r\n                        <li>\r\n                            <a href={repos} target=\"_blank\" title=\"Number Of Repositoriy\"><i>{userdata.repos}</i><span>Repositoriy</span></a>\r\n                        </li>\r\n                        <li>\r\n                            <a href={following} target=\"_blank\" title=\"Number Of Following\"><i>{userdata.following}</i><span>Following</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Search extends Component {\r\n\r\n    submit(event){\r\n        event.preventDefault();\r\n        let value = this.ref.username.value;\r\n        this.props.searchProfile(value);\r\n        this.refs.username.value = ''\r\n    }\r\n  render(){\r\n    return (\r\n      <div className=\"search-box\">\r\n          <form onSubmit={this.submit.bind(this)}>\r\n              <label><input type=\"search\" ref=\"username\" placeholder=\"type username and hit enter\" /></label>\r\n          </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport Profile from './Components/Profile';\r\nimport Search from './Components/Search';\r\n\r\nconst API = 'https://api.github.com/users';\r\n\r\nclass Github extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: 'hiteshchoudhary',\r\n      name: '',\r\n      avatar: '',\r\n      repos: '',\r\n      followers: '',\r\n      following: '',\r\n      homeURL: '',\r\n      notFound: ''\r\n    };\r\n \r\n  }\r\n\r\n  getProfile(username){\r\n    let finalURL = `${API}/${username}`;\r\n\r\n    fetch(finalURL)\r\n    .then((res)=> res.json())\r\n    .then((data)=>{\r\n      this.setState({\r\n        username: data.login,\r\n        name: data.name,\r\n        avatar: data.avatar_url,\r\n        repos: data.public_repos,\r\n        followers: data.followers,\r\n        following: data.following,\r\n        homeURL: data.html_url,\r\n        notFound: data.message\r\n      });\r\n    })\r\n    .catch((error)=> console.log('There was a problem in fetching data'))\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getProfile(this.state.username);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <section id=\"card\">\r\n            <Search searchProfile={this.getProfile.bind(this)}/>\r\n            <Profile userData={this.state} />\r\n          </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Github;\r\n","import React, { Component } from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n\r\n  onLogin(){\r\n    this.props.onLogin();\r\n  }\r\n  onLogout(){\r\n    this.props.onLogout();\r\n  }\r\n\r\n\r\n  render(){\r\n    let page;\r\n    if(this.props.idToken){\r\n      page = <Navbar.Brand onClick={this.onLogout.bind(this)} href=\"#\">Logout</Navbar.Brand>\r\n    }else{\r\n      page = <Navbar.Brand onClick={this.onLogin.bind(this)} href=\"#\">Login</Navbar.Brand>\r\n    }\r\n    return (\r\n      <Navbar>\r\n          <Navbar.Brand>\r\n            Github Searcher\r\n          </Navbar.Brand>\r\n          <Nav>\r\n            {page}\r\n          </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Github from './Github';\nimport Header from './Components/Header';\nimport Auth0Lock from 'auth0-lock';\n\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      idToken: '',\n      profile: {}\n    };\n    this.lock = new Auth0Lock(this.props.clientID,this.props.domain);\n\n    this.lock.on('authenticated', (authResult)=> {\n      console.log(authResult);\n\n      this.lock.getProfile(authResult.idToken, (error,profile)=> {\n        if(error){\n          console.log(error);\n          return;\n        }\n        this.setProfile(authResult.idToken,profile);\n      });\n\n    });\n    this.getProfile();\n  }\n\n  static defaultProps = {\n    clientID: 'RygWdjBOQ7IGLXQrqNYZ9C4Wc9snBY5x',\n    domain: 'dev-k3n9q5ve.us.auth0.com'\n  }\n\n  setProfile(idToken,profile){\n    localStorage.setItem('idToken', idToken);\n    localStorage.setItem('profile', JSON.stringify(profile));\n\n    this.setState({\n      idToken: localStorage.getItem('idToken'),\n      profile: JSON.parse(localStorage.getItem('profile'))\n    });\n\n  }\n\n  getProfile(){\n    if(localStorage.getItem('idToken') != null){\n      this.setState({\n        idToken: localStorage.getItem('idToken'),\n        profile: JSON.parse(localStorage.getItem('profile'))\n      }, () => {\n        console.log(this.state);\n      });\n    }\n  }\n\n  showLock(){\n    this.lock.show();\n  }\n\n  logout(){\n    this.setState({\n      idToken: '',\n      profile: ''\n    }, ()=> {\n      localStorage.removeItem('idToken');\n      localStorage.removeItem('profile');\n\n    });\n  }\n\n\n  render(){\n    let gitty;\n    if(this.state.idToken){\n      gitty = <Github />\n    }else{\n      gitty = \"Click on Login to view Github Viewer\"\n    }\n\n    return (\n      <div className=\"App\">\n        <Header\n          lock={this.lock}\n          idToken={this.state.idToken}\n          onLogout = {this.logout.bind(this)}\n          onLogin = {this.showLock.bind(this)}\n        />\n         \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}